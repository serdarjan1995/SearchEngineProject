''' The following code inserts data to the url table (first table) which has all url results and some information about them such as title,search_engine,search term 
and if the url is classified as duplicate or ad.

After finding ads and duplicates we calculate statistics such as count(unique urls), count(dups) and count(ads) and insert them to DB table stats_table

Then we create a dataframe that included only unique urls,search term with boolean fields is_google,is_bing etc. to use it for the next steps and insert it into table 
unique_urls_with_flags.
'''


###INSERT DATA TO URL TABLE

cursor = conn.cursor()

for _, row in df_merged.iterrows():
    cursor.execute("""
        INSERT INTO urls (url, title, search_engine,is_ad,is_duplicate,search_term)
        VALUES (%s, %s, %s, %s, %s, %s)
    """, (row['url'], row['title'], row['search_engine'],row['is_ad'],row['is_duplicate'],row['search_term']))

conn.commit()
cursor.close()


#INSERT DATA TO STATS TABLE

unique_urls = df_merged['url'].nunique()
duplicate_urls = df_merged.duplicated('url').sum()
ad_urls = df_merged['is_ad'].sum()


cursor = conn.cursor()
cursor.execute("""
    INSERT INTO url_stats (search_terms, unique_urls, duplicate_urls, ad_urls)
    VALUES (%s, %s, %s, %s)
""", (
    query,
    int(unique_urls),
    int(duplicate_urls),
    int(ad_urls)
))

conn.commit()

cursor = conn.cursor()

##CREATE DATAFRAME WITH UNIQUE URL RESULTS

# Set 1 for each (url, search_engine) pair
df_wo_ads=df_merged[df_merged['is_ad']==False]
df_wo_ads['present'] = 1

# Pivot table to wide format
pivot_df = df_wo_ads.pivot_table(
    index='url',
    columns='search_engine',
    values='present',
    fill_value=0,
    aggfunc='max'
).reset_index()

pivot_df['search_term'] = query

# Optional: Rename columns
pivot_df.columns.name = None  # Remove hierarchical index
pivot_df = pivot_df.rename(columns={
    'Google': 'in_google',
    'Bing': 'in_bing',
    'Yahoo': 'in_yahoo',
    'Duck_duck_go': 'in_duckduckgo'
})

## INSERT RESULTS TO A DB TABLE 

for _, row in pivot_df.iterrows():
    cursor.execute("""
        INSERT INTO unique_urls_with_flags (url,search_term, in_google, in_bing, in_yahoo, in_duckduckgo)
        VALUES (%s, %s,%s , %s, %s, %s)
        ON DUPLICATE KEY UPDATE url = url;
    """, (
        row['url'],
        query,
        row.get('in_google', 0),
        row.get('in_bing', 0),
        row.get('in_yahoo', 0),
        row.get('in_duckduckgo', 0)
    ))

conn.commit()
cursor.close()
